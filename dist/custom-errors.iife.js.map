{"version":3,"file":"custom-errors.iife.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable max-classes-per-file */\nexport class CustomError extends Error {\n    constructor(message?: string) {\n        super(message)\n        // for detailed logs at v8\n        if (typeof Error.captureStackTrace === \"function\") {\n            Error.captureStackTrace(this, this.constructor)\n        } else {\n            const err = new Error(message)\n            this.stack = err.stack\n        }\n    }\n}\n\nexport interface CustomErrorInterface {\n    name: string\n    message?: string\n    stack?: string\n}\n\ninterface CustomErrorConstructor {\n    new(message?: string): CustomErrorInterface\n}\n\nexport const createCustomError = (\n    errorName: string\n): CustomErrorConstructor => {\n    class MyCustomError extends CustomError implements CustomErrorInterface {\n        constructor(message?: string) {\n            super(message)\n            this.name = errorName\n        }\n    }\n    return MyCustomError\n}\n"],"names":["CustomError","Error","[object Object]","message","super","captureStackTrace","this","constructor","err","stack","errorName","name"],"mappings":"gDACaA,UAAoBC,MAC7BC,YAAYC,GAGR,GAFAC,MAAMD,GAEiC,mBAA5BF,MAAMI,kBACbJ,MAAMI,kBAAkBC,KAAMA,KAAKC,iBAChC,CACH,MAAMC,EAAM,IAAIP,MAAME,GACtBG,KAAKG,MAAQD,EAAIC,mDAgBzBC,GAEA,cAA4BV,EACxBE,YAAYC,GACRC,MAAMD,GACNG,KAAKK,KAAOD"}